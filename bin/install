#!/usr/bin/env bash

set -e
set -o pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install_helm() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local bin_install_path="$install_path/bin"
  local download_url="$(get_download_url $version)"

  mkdir -p "${bin_install_path}"

  local bin_path="${bin_install_path}/helm"
  echo "Downloading helm from ${download_url}"
  if curl -L -sf "$download_url" -o "$bin_path"; then
    chmod +x $bin_path
  else
    exit 1
  fi
}

get_arch() {
  uname | tr '[:upper:]' '[:lower:]'
}

get_cpu() {
  local machine_hardware_name
  machine_hardware_name=${ASDF_HELM_OVERWRITE_ARCH:-"$(uname -m)"}

  case "$machine_hardware_name" in
    'x86_64') local cpu_type="amd64";;
    'powerpc64le' | 'ppc64le') local cpu_type="ppc64le";;    
    'aarch64') local cpu_type="arm64";;
    'armv7l') local cpu_type="arm";;
    *) local cpu_type="$machine_hardware_name";;
  esac

  echo "$cpu_type"
}

get_download_url() {
  local version="$1"
  local platform="$(get_arch)"
  echo "https://get.helm.sh/helm-v${version}-${platform}-$(get_cpu).tar.gz"
}

install_helm $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
    #https://get.helm.sh/helm-v3.8.0-rc.1-linux-amd64.tar.gz